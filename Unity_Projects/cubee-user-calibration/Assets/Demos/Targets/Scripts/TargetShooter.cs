using Biglab.Input;
using Biglab.UI;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/// <summary>
/// Component that enables shooting of targets and logging the mouse coordinates and shooting events.
/// </summary>
public class TargetShooter : MonoBehaviour
{
    public CustomInput Input;

    public VirtualPointer VirtualPointer;

    [Tooltip( "Table to write per-frame events generated by this component." )]
    public TableWriter Log;

    void Update()
    {
        // Log the mouse position
        //Log.SetField( "MouseX", Input.mousePosition.x );
        //Log.SetField( "MouseY", Input.mousePosition.y );

        // 
        if( Input.GetButtonDown( "Fire" ) )
        {
            Debug.Log("FIRE!");
            Debug.DrawRay( VirtualPointer.Ray.origin, VirtualPointer.Ray.direction, Color.cyan, 10F );

            // Shoot and test bullet against target
            RaycastHit info;
            if( Physics.Raycast( VirtualPointer.Ray, out info ) )
            {
                // Check if the ray hit a target.
                var target_Behaviour = info.collider.GetComponent<TargetBehaviour>();
                if( target_Behaviour != null )
                {
                    // Found a target, did it hit the back side?
                    if( target_Behaviour.DetectHit( VirtualPointer.Ray, info ) )
                    {
                        // Hit the target, and hit the front side. 
                        //Log.SetField( "EventType", HitType.HitTargetFront );
                    }
                    else
                    {
                        // Hit the target, but hit the back side 
                        //Log.SetField( "EventType", HitType.HitTargetBack );
                    }
                }
            }
            else
            {
                // Missed any target entirely.
                //Log.SetField( "EventType", HitType.MissTarget );
            }
        }
    }
}
